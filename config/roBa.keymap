#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        pw_name: pw_name {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_NUMBER_0 &kp KP_NUMBER_8 &kp KP_NUMBER_0 &kp KP_NUMBER_9 &kp KP_NUMBER_2 &kp KP_NUMBER_7>;
            label = "PW_NAME";
        };

        map_rm: map_rm {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(R) &kp LS(M)>;
            label = "MAP_RM";
        };

        kakko: kakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_1 &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT>;
            label = "KAKKO";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W           &kp E         &kp R                   &kp T                                         &kp Y        &kp U  &lt 5 I   &kp O     &kp P
&kp A             &kp S           &kp D         &kp F                   &kp G            &kakko           &kp COMMA   &kp H        &kp J  &kp K     &kp L     &lt 5 MINUS
&mt LEFT_SHIFT Z  &kp X           &kp C         &kp V                   &kp B            &kp AT_SIGN      &kp PERIOD  &kp N        &kp M  &mkp MB1  &mkp MB2  &mt RIGHT_SHIFT SLASH
&kp LCTRL         &lt 1 LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 3 SPACE  &lt 5 LS(SPACE)  &lt 2 TAB        &lt 6 DEL   &lt 1 ENTER                             &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &none   &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans      &none   &none   &kp F4  &kp F5  &kp F6  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &kp F1  &kp F2  &kp F3  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &kp DEL
            >;
        };

        NUM {
            bindings = <
&kp N0           &kp N7        &kp N8        &kp N9        &kp F10                          &kp COLON             &kp N7        &kp N8        &kp N9        &kp N0
&none            &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp LS(F)  &none       &none     &kp MINUS             &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PERIOD
&kp LA(LS(F12))  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &map_rm    &none       &none     &kp NON_US_BACKSLASH  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH
&trans           &trans        &trans        &trans        &trans     &trans      &pw_name  &trans                                                          &kp UNDERSCORE
            >;
        };

        SYMBOL {
            bindings = <
&kp ESCAPE  &none           &kp GRAVE        &kp SQT        &trans                                   &kp AT_SIGN        &kp SQT          &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS
&kp HOME    &none           &kp BACKSLASH    &kp SEMICOLON  &kp COLON  &trans      &kp LESS_THAN     &kp GREATER_THAN   &kp DOLLAR       &kp PERCENT           &kp AMPERSAND          &kp UNDERSCORE
&kp END     &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp PIPE       &kp CARET  &trans      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp EXCLAMATION  &kp DOUBLE_QUOTES     &kp HASH               &kp QUESTION
&trans      &trans          &trans           &trans         &trans     &trans      &trans            &trans                                                                           &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&kp ESCAPE  &trans     &trans     &trans     &kp UP_ARROW                                   &kp RG(D)                  &trans    &trans  &trans  &kp LC(P)
&kp LC(A)   &trans     &trans     &kp LEFT   &kp DOWN      &kp RIGHT      &kp LC(KP_PLUS)   &trans                     &mkp MB5  &trans  &trans  &trans
&kp LC(Z)   &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(Y)     &trans         &kp LC(KP_MINUS)  &trans                     &mkp MB4  &trans  &trans  &trans
&trans      &trans     &trans     &trans     &trans        &trans         &kp LG(LS(S))     &mt LANGUAGE_2 LANGUAGE_1                            &kp DEL
            >;
        };

        Bluetooth {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
