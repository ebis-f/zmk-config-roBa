#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        scroll {
            bindings = <&lt 5 LEFT_SHIFT>;
            key-positions = <31 32>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        pw_name: pw_name {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_NUMBER_0 &kp KP_NUMBER_8 &kp KP_NUMBER_0 &kp KP_NUMBER_9 &kp KP_NUMBER_2 &kp KP_NUMBER_7>;
            label = "PW_NAME";
        };

        map_rm: map_rm {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(R) &kp LS(M)>;
            label = "MAP_RM";
        };

        kakko: kakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_1 &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT>;
            label = "KAKKO";
        };

        dekara_kasihari: dekara_kasihari {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(TAB) &kp LS(TAB) &kp LS(TAB) &kp LS(TAB) &kp LS(TAB) &kp LS(TAB) &kp LS(TAB) &kp LC(V) &kp LC(HOME)>;
            label = "DEKARA_KASIHARI";
        };

        dekara_kasicut: dekara_kasicut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(END)) &kp LC(X)>;
            label = "DEKARA_KASICUT";
        };

        dekara_rubi: dekara_rubi {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_2 &kp LEFT_BRACKET &kp SPACE &kp SEMICOLON &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp RIGHT_BRACKET &kp LANG1>;
            label = "DEKARA_RUBI";
        };

        dekara_split: dekara_split {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mkp MB2 &kp L>;
            label = "DEKARA_SPLIT";
        };

        dekara_enctab: dekara_enctab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F8 &kp TAB &kp TAB &kp END>;
            label = "DEKARA_ENCTAB";
        };

        remote_pw: remote_pw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp TAB>,
                <&macro_wait_time 100>,
                <&kp N7 &kp N7 &kp AT_SIGN &kp G &kp S &kp S &kp LS(G) &kp LS(S) &kp LS(S) &kp NUMBER_2 &kp N0 &kp NUMBER_1 &kp N9 &kp ENTER>;

            label = "REMOTE_PW";
        };

        remote2: remote2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LG(PAUSE_BREAK)>,
                <&macro_wait_time 100>,
                <&kp TAB>,
                <&macro_wait_time 100>,
                <&kp LG(INS) &kp ENTER>;

            label = "REMOTE2";
        };

        dekara_maee: dekara_maee {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&mkp MB2 &kp M>,
                <&macro_wait_time 100>,
                <&kp TAB &kp NUMBER_0 &kp TAB &kp TAB &kp TAB &kp ENTER>;

            label = "DEKARA_MAEE";
        };

        m_address: m_address {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_2 &kp K &kp O &kp E &kp PERIOD &kp NUMBER_2 &kp NUMBER_1 &kp MINUS &kp N9 &kp NUMBER_2 &kp N7 &kp AT_SIGN &kp O &kp U &kp T &kp L &kp O &kp O &kp K &kp PERIOD &kp J &kp P>;
            label = "M_ADDRESS";
        };

        kana_space: kana_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_1 &kp SPACE>;
            label = "KANA_SPACE";
        };

        map_delete: map_delete {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp BSPC &kp BSPC &kp BSPC &kp BSPC>;
            label = "MAP_DELETE";
        };

        Hankaku_enter: Hankaku_enter {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F10 &kp ENTER>;
            label = "HANKAKU_ENTER";
        };

        rubi_kakko: rubi_kakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE &kp RIGHT_BRACKET &kp F10 &kp ENTER>;
            label = "RUBI_KAKKO";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 6 Q           &kp W         &kp E                    &kp R                   &kp T                                                 &kp Y        &kp U  &kp I     &kp O     &kp P
&mt LC(A) A       &mt LC(S) S   &kp D                    &kp F                   &kp G            &mt LG(LS(S)) LCTRL      &kp COMMA   &kp H        &kp J  &kp K     &kp L     &lt 5 MINUS
&mt LEFT_SHIFT Z  &mt LC(X) X   &mt LC(C) C              &mt LC(V) V             &kp B            &kp AT_SIGN              &kp PERIOD  &kp N        &kp M  &mkp MB1  &mkp MB2  &mt RS(RCTRL) SLASH
&kp DEL           &kp LEFT_ALT  &mt LEFT_WIN UNDERSCORE  &lt_to_layer_0 2 SPACE  &lt 5 LS(SPACE)  &lt 3 TAB                &kp RCTRL   &lt 1 ENTER                             &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        FUNCTION {
            bindings = <
&trans      &trans  &trans  &trans    &trans                                             &none   &kp F1  &kp F2  &kp F3  &kp F10
&trans      &trans  &trans  &trans    &kp PAUSE_BREAK  &kp LG(PAUSE_BREAK)      &none    &none   &kp F4  &kp F5  &kp F6  &kp F11
&trans      &trans  &trans  &trans    &kp INSERT       &kp LG(INSERT)           &trans   &trans  &kp F7  &kp F8  &kp F9  &kp F12
&kp LA(F4)  &trans  &trans  &remote2  &none            &m_address               &kp DEL  &trans                          &kp BACKSPACE
            >;
        };

        NUM {
            bindings = <
&kp BACKSPACE    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp N0                                  &none           &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp N0
&kp LA(LS(F12))  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp LS(F)  &kp F10      &kp UNDERSCORE  &kp MINUS       &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PERIOD
&kp LC(Z)        &kp N7        &kp N8        &kp N9        &map_rm    &none        &kp BACKSLASH   &kp COLON       &kp N7        &kp N8        &kp N9        &kp SLASH
&kp DEL          &trans        &none         &trans        &trans     &trans       &kp DEL         &Hankaku_enter                                            &kp BACKSPACE
            >;
        };

        SYMBOL {
            bindings = <
&kp ESCAPE  &kp PLUS      &kp GRAVE      &kp SQT        &kp DOUBLE_QUOTES                                         &kp AT_SIGN        &kp SQT          &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS
&kp HOME    &kp MINUS     &kp BACKSLASH  &kp SEMICOLON  &kp COLON          &kp EQUAL            &kp LESS_THAN     &kp GREATER_THAN   &kp DOLLAR       &kp PERCENT           &kp AMPERSAND          &kp UNDERSCORE
&kp END     &kp ASTERISK  &none          &kp PIPE       &kp LEFT_BRACE     &kp RIGHT_BRACE      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp EXCLAMATION  &kp DOUBLE_QUOTES     &kp HASH               &kp QUESTION
&trans      &kp SLASH     &trans         &trans         &trans             &trans               &kp DEL           &Hankaku_enter                                                                   &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &none   &none   &none     &none     &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &mkp MB1  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&kp ESCAPE  &trans           &dekara_split     &trans        &dekara_maee                                     &kp F6                     &kp F7    &dekara_enctab  &trans        &kp HOME
&kp LC(A)   &dekara_kasicut  &dekara_kasihari  &dekara_rubi  &none         &map_delete      &kp LC(KP_PLUS)   &trans                     &mkp MB5  &kp LEFT        &kp UP_ARROW  &kp RIGHT
&kp LC(Z)   &kp LC(X)        &kp LC(C)         &kp LC(V)     &kp LC(Y)     &trans           &kp LC(KP_MINUS)  &rubi_kakko                &mkp MB4  &none           &kp DOWN      &kp END
&pw_name    &trans           &trans            &trans        &trans        &trans           &kp DEL           &mt LANGUAGE_2 LANGUAGE_1                                          &kp BACKSPACE
            >;
        };

        Bluetooth {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &none       &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
